<?php

// 
// print_r(WGR_BASE_PATH);

// 
// $eb_cache_php = ABSPATH . 'wp-content/webgiareorg/eb_cache.php';
// if (is_file($eb_cache_php)) {
if (defined('EB_THEME_CACHE')) {
    $root_dir_cache = dirname(EB_THEME_CACHE);
} else {
    $root_dir_cache = ABSPATH . 'wp-content/uploads/ebcache';

    // 
    // include $eb_cache_php;
}
// $root_dir_cache = dirname(EB_THEME_CACHE);
// print_r($root_dir_cache);
// }

// 
if (defined('EB_MY_CACHE_CONFIG')) {
    $my_config_php = EB_MY_CACHE_CONFIG;
} else {
    $my_config_php = $root_dir_cache . '/my-config.php';
}
// echo $my_config_php . '<br>' . "\n";
$my_config_content = '';
if (is_file($my_config_php)) {
    $my_config_content = 'Nội dung này chỉ coder mới có thể xem!';
    // $my_config_content = file_get_contents($my_config_php);
}


?>
<h1>Cấu hình website</h1>
<h2><?php echo str_replace(ABSPATH, '', $my_config_php); ?></h2>
<div class="text-center w99">
    <textarea rows="<?php echo count(explode("\n", $my_config_content)); ?>" class="large-text code" placeholder="My config content" readonly disabled><?php echo esc_html($my_config_content); ?></textarea>
</div>
<br>
<!-- Cleanup site cache -->
<?php

// xóa cache khi chạy qua phương thức POST (chỉ khi không phải save robots)
if (isset($_POST['cleanup_cache']) && wp_verify_nonce($_POST['_wpnonce_cleanup_cache'], 'cleanup_cache_action')) {
    // xóa cache theo redis nếu có
    if (is_file($my_config_php)) {
        include $my_config_php;

        // 
        if (defined('EB_REDIS_CACHE') && EB_REDIS_CACHE == true && !empty(phpversion('redis'))) {
            // print_r(EB_REDIS_CACHE);

            // 
            try {
                $rd = new Redis();
                $rd->connect(WGR_REDIS_HOST, WGR_REDIS_PORT);

                // chỉ lấy cache theo prefix của từng tên miền
                if (defined('WGR_CACHE_PREFIX')) {
                    $cache_prefix = WGR_CACHE_PREFIX;
                } else {
                    $cache_prefix = strtolower(str_replace([
                        'www.',
                        '.'
                    ], '', str_replace('-', '_', explode(':', $_SERVER['HTTP_HOST'])[0])));
                }
                $cache_prefix .= '*';
                echo 'Cache prefix: ' . $cache_prefix . '<br>' . "\n";

                // 
                $keys = $rd->keys($cache_prefix);
                // print_r($keys);
                if ($keys) {
                    $rd->del($keys);
                }
            } catch (Exception $e) {
                echo $e->getMessage();
            }
        } else {
            echo 'no redis' . '<br>' . "\n";
        }
    } else {
        echo 'No config file: ' . $my_config_php . '<br>' . "\n";
    }

    // xong mới xóa cache trong file
    echo 'Xóa cache trong thư mục: ' . $root_dir_cache . '<br>' . "\n";
    WGR_deleteDirectory($root_dir_cache);
}

?>
<h2>Cleanup site cache</h2>
<form action="" method="post" onsubmit="return confirm('Cleanup all site cache?');">
    <?php wp_nonce_field('cleanup_cache_action', '_wpnonce_cleanup_cache'); ?>
    <button type="submit" name="cleanup_cache" class="button button-primary button-large">Dọn dẹp WGR Cache</button>
</form>
<br>
<!-- END Cleanup site cache -->

<hr>

<!-- WGR Options Form -->
<?php
// Xử lý lưu options
if (isset($_POST['save_wgr_options']) && wp_verify_nonce($_POST['_wpnonce_wgr_options'], 'save_wgr_options_action')) {
    $options_to_save = [
        'wgr_advanced_cache' => isset($_POST['wgr_advanced_cache']) ? '1' : '0',
        'wgr_object_cache' => isset($_POST['wgr_object_cache']) ? '1' : '0',
        'wgr_term_description_order' => isset($_POST['wgr_term_description_order']) ? '1' : '0',
        'wgr_contact_price' => sanitize_text_field($_POST['wgr_contact_price'] ?? ''),
        'wgr_add_font_awesome' => sanitize_text_field($_POST['wgr_add_font_awesome'] ?? '0'),
        // CDN
        'cdn_base_url' => esc_url_raw($_POST['cdn_base_url'] ?? ''),
        'eb_cdn_uploads_url' => esc_url_raw($_POST['eb_cdn_uploads_url'] ?? ''),
    ];

    $success_count = 0;
    $wgr_config_path = WGR_CHILD_PATH . 'custom_config.php';
    file_put_contents($wgr_config_path, implode("\n", [
        '<?php',
        '',
        '/**',
        ' * Custom config file',
        ' * Do not edit this file manually, changes will be overwritten when saving options from admin panel.',
        ' *',
        ' * @package WebGiaRe',
        ' * @link https://webgiare.org',
        ' * @license GNU General Public License v2 or later (GPLv2+)',
        ' * Generated on ' . date_i18n('Y-m-d H:i:s'),
        ' * From ' . $_SERVER['REQUEST_URI'],
        ' *',
        ' */',
        '',
    ]) . "\n", LOCK_EX);
    foreach ($options_to_save as $option_name => $option_value) {
        if (update_option($option_name, $option_value)) {
            $success_count++;
        }

        // Xóa các file liên quan khi thay đổi cấu hình cache
        if ($option_name == 'wgr_object_cache') {
            if (empty($option_value)) {
                // xóa file object-cache.php trong wp-content nếu có
                if (
                    is_file(ABSPATH . 'wp-content/object-cache.php') &&
                    // đảm bảo file này được tạo ra bởi plugin webgiareorg
                    strpos(file_get_contents(ABSPATH . 'wp-content/object-cache.php'), '/webgiareorg/') !== false
                ) {
                    unlink(ABSPATH . 'wp-content/object-cache.php');
                }
            } else {
                WGR_create_object_cache_file();
            }
        } else if ($option_name == 'wgr_advanced_cache') {
            if (empty($option_value)) {
                // xóa file advanced-cache.php trong wp-content nếu có
                if (
                    is_file(ABSPATH . 'wp-content/advanced-cache.php') &&
                    // đảm bảo file này được tạo ra bởi plugin webgiareorg
                    strpos(file_get_contents(ABSPATH . 'wp-content/advanced-cache.php'), '/webgiareorg/') !== false
                ) {
                    unlink(ABSPATH . 'wp-content/advanced-cache.php');
                }
            } else {
                WGR_create_advanced_cache_file();
            }
        }
        // các trường con lại chỉ ghi vào file custom_config.php khi có giá trị
        else if (empty($option_value)) {
            continue;
        } else if ($option_name == 'cdn_base_url') {
            // Nếu không phải là URL hợp lệ hoặc trùng với giá trị mặc định thì bỏ qua
            if (strpos($option_value, '//') === false || $option_value == DYNAMIC_BASE_URL) {
                continue;
            }
            $option_value = rtrim($option_value, '/') . '/';
        } else if ($option_name == 'eb_cdn_uploads_url') {
            // Nếu không phải là URL hợp lệ hoặc trùng với giá trị mặc định thì bỏ qua
            if (strpos($option_value, '//') === false) {
                continue;
            }
            $option_value = rtrim($option_value, '/') . '/';
        }

        // Ghi vào file config
        file_put_contents($wgr_config_path, 'define(\'' . strtoupper($option_name) . '\', \'' . $option_value . '\');' . "\n", FILE_APPEND);
    }

    if ($success_count > 0) {
        echo '<div class="notice notice-success"><p>Đã lưu ' . $success_count . ' options thành công!</p></div>';
    } else {
        echo '<div class="notice notice-info"><p>Không có thay đổi nào được lưu.</p></div>';
    }
}

// Lấy giá trị hiện tại của options
$wgr_advanced_cache = get_option('wgr_advanced_cache', '0');
$wgr_object_cache = get_option('wgr_object_cache', '1');
$wgr_term_description_order = get_option('wgr_term_description_order', '0');
$wgr_contact_price = get_option('wgr_contact_price', '');
$wgr_add_font_awesome = get_option('wgr_add_font_awesome', '0');
$cdn_base_url = get_option('cdn_base_url', '');
$eb_cdn_uploads_url = get_option('eb_cdn_uploads_url', '');
?>
<h2>Custom Config</h2>
<form action="" method="post">
    <?php wp_nonce_field('save_wgr_options_action', '_wpnonce_wgr_options'); ?>

    <table class="form-table" role="presentation">
        <tbody>
            <tr>
                <th scope="row">WGR Advanced Cache</th>
                <td>
                    <fieldset>
                        <label>
                            <input type="checkbox" name="wgr_advanced_cache" value="1" <?php checked($wgr_advanced_cache, '1'); ?>>
                            Sử dụng WGR Advanced Cache (khuyên dùng)
                        </label>
                        <p class="description">Được tối ưu riêng cho code của WebGiaRe.</p>
                    </fieldset>
                </td>
            </tr>

            <tr>
                <th scope="row">WGR Object Cache</th>
                <td>
                    <fieldset>
                        <label>
                            <input type="checkbox" name="wgr_object_cache" value="1" <?php checked($wgr_object_cache, '1'); ?>>
                            Sử dụng WGR Object Cache (khuyên dùng)
                        </label>
                        <p class="description">Được tối ưu riêng cho code của WebGiaRe.</p>
                    </fieldset>
                </td>
            </tr>

            <tr>
                <th scope="row">Term description</th>
                <td>
                    <fieldset>
                        <label>
                            <input type="checkbox" name="wgr_term_description_order" value="1" <?php checked($wgr_term_description_order, '1'); ?>>
                            To bottom of the page
                        </label>
                        <p class="description">Chuyển mô tả danh mục xuống cuối trang.</p>
                    </fieldset>
                </td>
            </tr>

            <tr>
                <th scope="row">
                    <label for="wgr_contact_price">Contact Price</label>
                </th>
                <td>
                    <input type="url" name="wgr_contact_price" id="wgr_contact_price" value="<?php echo esc_attr($wgr_contact_price); ?>" class="regular-text" placeholder="Liên hệ">
                    <p class="description">Chuyển giá sản phẩm từ `0 đ` thành `Liên hệ`. Để trống sẽ tắt chức năng này.</p>
                </td>
            </tr>

            <tr>
                <th scope="row">
                    <label for="wgr_add_font_awesome">Font Awesome Version</label>
                </th>
                <td>
                    <select name="wgr_add_font_awesome" id="wgr_add_font_awesome" class="regular-text">
                        <option value="0" <?php selected($wgr_add_font_awesome, '0'); ?>>Không sử dụng</option>
                        <option value="4" <?php selected($wgr_add_font_awesome, '4'); ?>>Font Awesome 4</option>
                        <option value="5" <?php selected($wgr_add_font_awesome, '5'); ?>>Font Awesome 5</option>
                        <option value="6" <?php selected($wgr_add_font_awesome, '6'); ?>>Font Awesome 6</option>
                    </select>
                    <p class="description">Chọn phiên bản Font Awesome để sử dụng trên website. Chỉ kích hoạt khi có nội dung sử dụng Font Awesome và không có plugin nào nạp font tương tự để nhẹ website.</p>
                </td>
            </tr>

            <tr>
                <th scope="row">
                    <label for="cdn_base_url">CDN Base URL</label>
                </th>
                <td>
                    <input type="url" name="cdn_base_url" id="cdn_base_url" value="<?php echo esc_attr($cdn_base_url); ?>" class="regular-text" placeholder="https://cdn.example.com">
                    <p class="description">Nhập URL của CDN để sử dụng cho các tài nguyên tĩnh.</p>
                </td>
            </tr>

            <tr>
                <th scope="row">
                    <label for="eb_cdn_uploads_url">CDN Uploads URL</label>
                </th>
                <td>
                    <input type="url" name="eb_cdn_uploads_url" id="eb_cdn_uploads_url" value="<?php echo esc_attr($eb_cdn_uploads_url); ?>" class="regular-text" placeholder="https://media.example.com">
                    <p class="description">Nhập URL của CDN để sử dụng cho các tài nguyên tĩnh trong thư mục uploads.</p>
                </td>
            </tr>
        </tbody>
    </table>

    <p class="submit">
        <button type="submit" name="save_wgr_options" class="button button-primary button-large">Lưu Options</button>
    </p>
</form>
<!-- END WGR Options Form -->

<hr>

<!-- Object Cache Statistics -->
<?php
global $wp_object_cache, $wpdb;

// Get cache stats
$redis_connected = false;
$cache_hits = 0;
$cache_misses = 0;
$hit_ratio = 0;

if (is_object($wp_object_cache)) {
    // Use reflection to get private properties
    $reflection = new ReflectionClass($wp_object_cache);

    // Get redis_connected status
    if ($reflection->hasProperty('redis_connected')) {
        $redis_prop = $reflection->getProperty('redis_connected');
        $redis_prop->setAccessible(true);
        $redis_connected = $redis_prop->getValue($wp_object_cache);
    }

    if ($reflection->hasProperty('cache_hits')) {
        $hits_prop = $reflection->getProperty('cache_hits');
        $hits_prop->setAccessible(true);
        $cache_hits = $hits_prop->getValue($wp_object_cache);
    }

    if ($reflection->hasProperty('cache_misses')) {
        $misses_prop = $reflection->getProperty('cache_misses');
        $misses_prop->setAccessible(true);
        $cache_misses = $misses_prop->getValue($wp_object_cache);
    }

    $total_requests = $cache_hits + $cache_misses;
    if ($total_requests > 0) {
        $hit_ratio = ($cache_hits / $total_requests) * 100;
    }
}

// Get database query count
$db_queries = $wpdb->num_queries;
$db_query_time = 0;
if (defined('SAVEQUERIES') && SAVEQUERIES && !empty($wpdb->queries)) {
    foreach ($wpdb->queries as $query) {
        $db_query_time += $query[1];
    }
}
?>
<h2>Object Cache & Database Statistics</h2>
<table class="widefat striped">
    <thead>
        <tr>
            <th colspan="2">Cache Performance</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><strong>Redis Status:</strong></td>
            <td>
                <?php if ($redis_connected): ?>
                    <span style="color: green;">✓ Connected</span>
                    <?php if (defined('WGR_CACHE_PREFIX')): ?>
                        (Prefix: <code><?php echo WGR_CACHE_PREFIX; ?></code>)
                    <?php endif; ?>
                <?php else: ?>
                    <span style="color: red;">✗ Not Connected</span>
                    <?php if (!defined('WGR_REDIS_CACHE') || WGR_REDIS_CACHE !== true): ?>
                        - <em>WGR_REDIS_CACHE is not enabled</em>
                    <?php elseif (!defined('WGR_CACHE_PREFIX') || empty(WGR_CACHE_PREFIX)): ?>
                        - <em>WGR_CACHE_PREFIX is not set</em>
                    <?php elseif (!defined('WGR_REDIS_HOST') || !defined('WGR_REDIS_PORT')): ?>
                        - <em>WGR_REDIS_HOST or WGR_REDIS_PORT is not set</em>
                    <?php elseif (!defined('WGR_OBJECT_CACHE') || WGR_OBJECT_CACHE != '1'): ?>
                        - <em>WGR_OBJECT_CACHE is not enabled</em>
                    <?php elseif (!class_exists('Redis')): ?>
                        - <em>Redis class is not available</em>
                    <?php else: ?>
                        <?php
                        $test_redis = new Redis();
                        try {
                            $test_redis->connect(WGR_REDIS_HOST, WGR_REDIS_PORT);
                            if ($test_redis->ping()) {
                                echo '<span style="color: orange;">⚠ Unable to connect to Redis server at ' . WGR_REDIS_HOST . ':' . WGR_REDIS_PORT . '</span>';
                            } else {
                                echo '<span style="color: red;">✗ Ping to Redis server failed</span>';
                            }
                        } catch (Exception $e) {
                            echo '<span style="color: red;">✗ ' . esc_html($e->getMessage()) . '</span>';
                        }
                        ?>
                    <?php endif; ?>
                <?php endif; ?>
            </td>
        </tr>
        <tr>
            <td><strong>Cache Hits:</strong></td>
            <td><?php echo number_format($cache_hits); ?></td>
        </tr>
        <tr>
            <td><strong>Cache Misses:</strong></td>
            <td><?php echo number_format($cache_misses); ?></td>
        </tr>
        <tr>
            <td><strong>Hit Ratio:</strong></td>
            <td>
                <strong style="color: <?php echo $hit_ratio >= 80 ? 'green' : ($hit_ratio >= 50 ? 'orange' : 'red'); ?>;">
                    <?php echo number_format($hit_ratio, 2); ?>%
                </strong>
                <?php if ($hit_ratio >= 80): ?>
                    <span style="color: green;">✓ Excellent</span>
                <?php elseif ($hit_ratio >= 50): ?>
                    <span style="color: orange;">⚠ Good</span>
                <?php else: ?>
                    <span style="color: red;">✗ Poor</span>
                <?php endif; ?>
            </td>
        </tr>
        <tr>
            <td><strong>Total Cache Requests:</strong></td>
            <td><?php echo number_format($cache_hits + $cache_misses); ?></td>
        </tr>
    </tbody>
</table>
<br>
<table class="widefat striped">
    <thead>
        <tr>
            <th colspan="2">Database Performance</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><strong>Total Queries:</strong></td>
            <td>
                <strong style="color: <?php echo $db_queries < 50 ? 'green' : ($db_queries < 100 ? 'orange' : 'red'); ?>;">
                    <?php echo number_format($db_queries); ?>
                </strong>
                <?php if ($db_queries < 50): ?>
                    <span style="color: green;">✓ Excellent</span>
                <?php elseif ($db_queries < 100): ?>
                    <span style="color: orange;">⚠ Acceptable</span>
                <?php else: ?>
                    <span style="color: red;">✗ Too many queries!</span>
                <?php endif; ?>
            </td>
        </tr>
        <?php if ($db_query_time > 0): ?>
            <tr>
                <td><strong>Query Time:</strong></td>
                <td><?php echo number_format($db_query_time, 4); ?> seconds</td>
            </tr>
        <?php endif; ?>
    </tbody>
</table>
<br>
<div class="notice notice-info">
    <p><strong>💡 Tips để tối ưu cache:</strong></p>
    <ul>
        <li><strong>Hit Ratio &gt; 80%</strong> là rất tốt - nghĩa là cache đang hoạt động hiệu quả</li>
        <li><strong>Database Queries &lt; 50</strong> là lý tưởng cho một page</li>
        <li>Để xem chi tiết queries, thêm <code>define('SAVEQUERIES', true);</code> vào wp-config.php</li>
        <li>Reload trang nhiều lần để thấy cache hits tăng lên</li>
    </ul>
</div>
<?php
// Xử lý bật/tắt SAVEQUERIES
if (isset($_POST['toggle_savequeries']) && wp_verify_nonce($_POST['_wpnonce_savequeries'], 'toggle_savequeries_action')) {
    $wp_config_path = ABSPATH . 'wp-config.php';

    if (is_file($wp_config_path) && is_writable($wp_config_path)) {
        $wp_config_content = file_get_contents($wp_config_path);
        $savequeries_line = "define('SAVEQUERIES', true);";

        // Tìm dòng chứa SAVEQUERIES (bất kể dạng nào: 'SAVEQUERIES' hoặc "SAVEQUERIES")
        // Bao gồm cả dòng bị comment: // define('SAVEQUERIES', ...)
        $pattern = '/.*[\'"]SAVEQUERIES[\'"].*\n?/i';
        $has_savequeries = false;
        // Nếu đã có SAVEQUERIES thì tìm và xóa dòng đó trước
        if (strpos($wp_config_content, "'SAVEQUERIES'") !== false || strpos($wp_config_content, '"SAVEQUERIES"') !== false) {
            $has_savequeries = true;

            // Xóa dòng SAVEQUERIES
            $wp_config_content = preg_replace($pattern, '', $wp_config_content);
            // Xóa các dòng trống thừa nếu có
            $wp_config_content = preg_replace('/\n{2,}/', "\n", $wp_config_content);
        }

        // Yêu cầu BẬT SAVEQUERIES
        if ($_POST['toggle_savequeries'] == 'enable') {
            // CHÈN MỚI vào đầu file ngay sau thẻ mở <?php
            $new_content = preg_replace('/^\s*<\?php\s*$/mi', "<?php\n" . $savequeries_line . "\n", $wp_config_content);

            if ($new_content !== false) {
                if (file_put_contents($wp_config_path, $new_content)) {
                    echo '<div class="notice notice-success"><p>✓ Đã chèn SAVEQUERIES vào wp-config.php</p></div>';
                    echo '<script>setTimeout(function(){ location.reload(); }, 2000);</script>';
                } else {
                    echo '<div class="notice notice-error"><p>✗ Không thể ghi vào wp-config.php</p></div>';
                }
            } else {
                echo '<div class="notice notice-error"><p>✗ Không tìm thấy vị trí phù hợp trong wp-config.php</p></div>';
            }
        } elseif ($_POST['toggle_savequeries'] == 'disable') {
            // Yêu cầu TẮT SAVEQUERIES
            if ($has_savequeries) {
                if (file_put_contents($wp_config_path, $wp_config_content)) {
                    echo '<div class="notice notice-success"><p>✓ Đã xóa SAVEQUERIES khỏi wp-config.php</p></div>';
                    echo '<script>setTimeout(function(){ location.reload(); }, 2000);</script>';
                } else {
                    echo '<div class="notice notice-error"><p>✗ Không thể ghi vào wp-config.php</p></div>';
                }
            } else {
                // Chưa có SAVEQUERIES -> BÁO ĐÃ TẮT
                echo '<div class="notice notice-info"><p>SAVEQUERIES chưa được khai báo trong wp-config.php (đã ở trạng thái tắt).</p></div>';
            }
        }
    } else {
        echo '<div class="notice notice-error"><p>✗ Không thể truy cập wp-config.php hoặc file không có quyền ghi!</p></div>';
    }
}
?>

<?php if (!defined('SAVEQUERIES') || !SAVEQUERIES): ?>
    <div class="notice notice-info">
        <p><strong>⚠ Để xem chi tiết query time:</strong></p>
        <p>Thêm dòng sau vào <code>wp-config.php</code>:</p>
        <pre>define('SAVEQUERIES', true);</pre>
        <form action="" method="post" style="margin-top: 10px;">
            <?php wp_nonce_field('toggle_savequeries_action', '_wpnonce_savequeries'); ?>
            <input type="hidden" name="toggle_savequeries" value="enable">
            <button type="submit" class="button button-secondary">🔧 Chèn SAVEQUERIES vào wp-config.php</button>
        </form>
        <br>
    </div>
<?php else: ?>
    <div class="notice notice-warning">
        <p><strong>✓ SAVEQUERIES đang được bật</strong></p>
        <p>Bạn có thể thấy thời gian query chi tiết ở bảng trên.</p>
        <form action="" method="post" style="margin-top: 10px;">
            <?php wp_nonce_field('toggle_savequeries_action', '_wpnonce_savequeries'); ?>
            <input type="hidden" name="toggle_savequeries" value="disable">
            <button type="submit" class="button button-secondary">🔧 Xóa SAVEQUERIES khỏi wp-config.php (cải thiện performance)</button>
        </form>
        <br>
    </div>
<?php endif; ?>

<?php if (!$redis_connected && (!defined('WGR_REDIS_CACHE') || WGR_REDIS_CACHE !== true)): ?>
    <div class="notice notice-error">
        <p><strong>⚠ Object Cache chưa được kích hoạt!</strong></p>
        <p>Để kích hoạt Redis Object Cache, thêm vào <code>wp-config.php</code>:</p>
        <pre>define('WGR_REDIS_CACHE', true);
define('WGR_CACHE_PREFIX', 'mysite_');
define('WGR_REDIS_HOST', '127.0.0.1');
define('WGR_REDIS_PORT', 6379);</pre>
    </div>
<?php endif; ?>
<br>
<!-- END Object Cache Statistics -->

<hr>

<!-- Edit robots.txt -->
<?php
// Logic lấy nội dung robots.txt
$robots_content = '';
$robots_base_content = '';
$robots_main_path = ABSPATH . 'robots.txt';
$robots_child_path = WGR_CHILD_PATH . 'tmp/robots.txt';
$robots_base_path = WGR_BASE_PATH . 'tmp/robots.txt';

// Ưu tiên lấy từ ABSPATH trước
if (is_file($robots_main_path)) {
    $robots_content = file_get_contents($robots_main_path);
} elseif (is_file($robots_child_path)) {
    $robots_content = file_get_contents($robots_child_path);
} else {
    $robots_base_content = trim(file_get_contents($robots_base_path));
    $robots_content = $robots_base_content;
}

// Xử lý form submit
if (isset($_POST['save_robots']) && wp_verify_nonce($_POST['_wpnonce_robots'], 'save_robots_action')) {
    $new_robots_content = stripslashes($_POST['robots_content']);
    if (empty($new_robots_content)) {
        if ($robots_base_content == '') {
            $robots_base_content = trim(file_get_contents($robots_base_path));
            $new_robots_content = $robots_base_content;
        } else {
            $new_robots_content = $robots_base_content;
        }
    }

    // Lưu vào ABSPATH/robots.txt
    if (file_put_contents($robots_main_path, $new_robots_content) !== false) {
        echo '<div class="notice notice-success"><p>Đã lưu robots.txt thành công!</p></div>';

        // 
        if ($robots_base_content == '') {
            $robots_base_content = trim(file_get_contents($robots_base_path));
        }

        // Kiểm tra nếu nội dung khác với base template thì lưu thêm vào child
        if ($new_robots_content !== $robots_base_content) {
            // Tạo thư mục tmp nếu chưa có
            $child_tmp_dir = dirname($robots_child_path);
            if (!is_dir($child_tmp_dir)) {
                wp_mkdir_p($child_tmp_dir);
            }
            file_put_contents($robots_child_path, $new_robots_content);
        } else if (is_file($robots_child_path)) {
            unlink($robots_child_path);
        }

        $robots_content = $new_robots_content;
    } else {
        echo '<div class="notice notice-error"><p>Lỗi: Không thể lưu robots.txt!</p></div>';
    }
}
?>
<h2>Edit <a href="<?php echo get_home_url(); ?>/robots.txt" target="_blank">robots.txt</a></h2>
<form action="" method="post">
    <?php wp_nonce_field('save_robots_action', '_wpnonce_robots'); ?>
    <div class="text-center w99">
        <textarea name="robots_content" rows="<?php echo count(explode("\n", $robots_content)) + 1; ?>" class="large-text code" placeholder="Nhập nội dung robots.txt..."><?php echo esc_textarea($robots_content); ?></textarea>
    </div>
    <br>
    <div>
        <button type="submit" name="save_robots" class="button button-primary button-large">Lưu robots.txt</button>
        <p><strong>Thứ tự ưu tiên đọc file:</strong></p>
        <ol>
            <li><?php echo str_replace(ABSPATH, '', $robots_main_path); ?></li>
            <li><?php echo str_replace(ABSPATH, '', $robots_child_path); ?></li>
            <li><?php echo str_replace(ABSPATH, '', $robots_base_path); ?></li>
        </ol>
    </div>
</form>
<!-- END Edit robots.txt -->